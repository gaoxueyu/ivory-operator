---
# Create the cluster we will do an actual upgrade on
apiVersion: ivory-operator.highgo.com/v1beta1
kind: IvoryCluster
metadata:
  name: wal-pvc-ivyupgrade
spec:
  postgresVersion: ${KUTTL_PG_UPGRADE_FROM_VERSION}
  instances:
    - dataVolumeClaimSpec: { accessModes: [ReadWriteOnce], resources: { requests: { storage: 1Gi } } }
      walVolumeClaimSpec: { accessModes: ["ReadWriteOnce"], resources: { requests: { storage: 1Gi } } }
      replicas: 3
  backups:
    pgbackrest:
      repos:
        - name: repo1
          volume:
            volumeClaimSpec: { accessModes: [ReadWriteOnce], resources: { requests: { storage: 1Gi } } }
---
# This upgrade is valid, but has no pgcluster to work on and should get that condition
apiVersion: ivory-operator.highgo.com/v1beta1
kind: IvyUpgrade
metadata:
  name: wal-pvc-ivyupgrade-do-it
spec:
  fromIvoryVersion: ${KUTTL_PG_UPGRADE_FROM_VERSION}
  toIvoryVersion: ${KUTTL_PG_UPGRADE_TO_VERSION}
  ivoryclusterName: wal-pvc-ivyupgrade
